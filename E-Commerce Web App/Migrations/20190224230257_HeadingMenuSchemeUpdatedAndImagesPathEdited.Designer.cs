// <auto-generated />
using System;
using E_Commerce_Web_App.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace E_Commerce_Web_App.Migrations
{
    [DbContext(typeof(WebStoreContext))]
    [Migration("20190224230257_HeadingMenuSchemeUpdatedAndImagesPathEdited")]
    partial class HeadingMenuSchemeUpdatedAndImagesPathEdited
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("E_Commerce_Web_App.Models.Category", b =>
                {
                    b.Property<byte>("Category_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Category_id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Category_id = (byte)1,
                            Name = "Men"
                        },
                        new
                        {
                            Category_id = (byte)2,
                            Name = "Women"
                        });
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.Color", b =>
                {
                    b.Property<byte>("Color_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Color_id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Color_id = (byte)1,
                            Name = "Red"
                        },
                        new
                        {
                            Color_id = (byte)2,
                            Name = "Blue"
                        },
                        new
                        {
                            Color_id = (byte)3,
                            Name = "Green"
                        },
                        new
                        {
                            Color_id = (byte)4,
                            Name = "Yellow"
                        },
                        new
                        {
                            Color_id = (byte)5,
                            Name = "Purple"
                        },
                        new
                        {
                            Color_id = (byte)6,
                            Name = "Black"
                        },
                        new
                        {
                            Color_id = (byte)7,
                            Name = "White"
                        });
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.FooterMenu", b =>
                {
                    b.Property<int>("FooterItem_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(70);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(35);

                    b.HasKey("FooterItem_id");

                    b.ToTable("FooterMenus");

                    b.HasData(
                        new
                        {
                            FooterItem_id = 1,
                            Link = "",
                            Name = "Home"
                        },
                        new
                        {
                            FooterItem_id = 2,
                            Link = "contact",
                            Name = "Contact us"
                        },
                        new
                        {
                            FooterItem_id = 3,
                            Link = "login",
                            Name = "Login"
                        },
                        new
                        {
                            FooterItem_id = 4,
                            Link = "register",
                            Name = "Register"
                        },
                        new
                        {
                            FooterItem_id = 5,
                            Link = "author",
                            Name = "Author"
                        });
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.HeadingMenu", b =>
                {
                    b.Property<byte>("HeadingItem_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("HasChildren");

                    b.Property<byte>("Item_Column");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(70);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(35);

                    b.Property<byte>("Parent");

                    b.HasKey("HeadingItem_id");

                    b.ToTable("HeadingMenus");

                    b.HasData(
                        new
                        {
                            HeadingItem_id = (byte)1,
                            HasChildren = false,
                            Item_Column = (byte)0,
                            Link = "",
                            Name = "Home",
                            Parent = (byte)0
                        },
                        new
                        {
                            HeadingItem_id = (byte)2,
                            HasChildren = true,
                            Item_Column = (byte)0,
                            Link = "",
                            Name = "Men",
                            Parent = (byte)0
                        },
                        new
                        {
                            HeadingItem_id = (byte)3,
                            HasChildren = true,
                            Item_Column = (byte)0,
                            Link = "",
                            Name = "Women",
                            Parent = (byte)0
                        },
                        new
                        {
                            HeadingItem_id = (byte)4,
                            HasChildren = false,
                            Item_Column = (byte)0,
                            Link = "contact",
                            Name = "Contact us",
                            Parent = (byte)0
                        },
                        new
                        {
                            HeadingItem_id = (byte)5,
                            HasChildren = false,
                            Item_Column = (byte)1,
                            Link = "products/men/accessories",
                            Name = "Accessories",
                            Parent = (byte)2
                        },
                        new
                        {
                            HeadingItem_id = (byte)6,
                            HasChildren = false,
                            Item_Column = (byte)1,
                            Link = "products/men/backpacks",
                            Name = "Backpacks",
                            Parent = (byte)2
                        },
                        new
                        {
                            HeadingItem_id = (byte)7,
                            HasChildren = false,
                            Item_Column = (byte)1,
                            Link = "products/men/blazers",
                            Name = "Blazers",
                            Parent = (byte)2
                        },
                        new
                        {
                            HeadingItem_id = (byte)8,
                            HasChildren = false,
                            Item_Column = (byte)1,
                            Link = "products/men/jackets",
                            Name = "Jackets",
                            Parent = (byte)2
                        },
                        new
                        {
                            HeadingItem_id = (byte)9,
                            HasChildren = false,
                            Item_Column = (byte)2,
                            Link = "products/men/jeans",
                            Name = "Jeans",
                            Parent = (byte)2
                        },
                        new
                        {
                            HeadingItem_id = (byte)10,
                            HasChildren = false,
                            Item_Column = (byte)2,
                            Link = "products/men/shirts",
                            Name = "Shirts",
                            Parent = (byte)2
                        },
                        new
                        {
                            HeadingItem_id = (byte)11,
                            HasChildren = false,
                            Item_Column = (byte)2,
                            Link = "products/men/shoes",
                            Name = "Shoes",
                            Parent = (byte)2
                        },
                        new
                        {
                            HeadingItem_id = (byte)12,
                            HasChildren = false,
                            Item_Column = (byte)2,
                            Link = "products/men/trousers",
                            Name = "Trousers",
                            Parent = (byte)2
                        },
                        new
                        {
                            HeadingItem_id = (byte)13,
                            HasChildren = false,
                            Item_Column = (byte)3,
                            Link = "products/men/t-shirts",
                            Name = "T-Shirts",
                            Parent = (byte)2
                        },
                        new
                        {
                            HeadingItem_id = (byte)14,
                            HasChildren = false,
                            Item_Column = (byte)3,
                            Link = "products/men/underwear",
                            Name = "Underwear",
                            Parent = (byte)2
                        },
                        new
                        {
                            HeadingItem_id = (byte)15,
                            HasChildren = false,
                            Item_Column = (byte)1,
                            Link = "products/women/accessories",
                            Name = "Accessories",
                            Parent = (byte)3
                        },
                        new
                        {
                            HeadingItem_id = (byte)16,
                            HasChildren = false,
                            Item_Column = (byte)1,
                            Link = "products/women/bags",
                            Name = "Bags",
                            Parent = (byte)3
                        },
                        new
                        {
                            HeadingItem_id = (byte)17,
                            HasChildren = false,
                            Item_Column = (byte)1,
                            Link = "products/women/body",
                            Name = "Body",
                            Parent = (byte)3
                        },
                        new
                        {
                            HeadingItem_id = (byte)18,
                            HasChildren = false,
                            Item_Column = (byte)1,
                            Link = "products/women/dresses",
                            Name = "Dresses",
                            Parent = (byte)3
                        },
                        new
                        {
                            HeadingItem_id = (byte)19,
                            HasChildren = false,
                            Item_Column = (byte)2,
                            Link = "products/women/jeans",
                            Name = "Jeans",
                            Parent = (byte)3
                        },
                        new
                        {
                            HeadingItem_id = (byte)20,
                            HasChildren = false,
                            Item_Column = (byte)2,
                            Link = "products/women/jumpsuits",
                            Name = "Jumpsuits",
                            Parent = (byte)3
                        },
                        new
                        {
                            HeadingItem_id = (byte)21,
                            HasChildren = false,
                            Item_Column = (byte)2,
                            Link = "products/women/shoes",
                            Name = "Shoes",
                            Parent = (byte)3
                        },
                        new
                        {
                            HeadingItem_id = (byte)22,
                            HasChildren = false,
                            Item_Column = (byte)2,
                            Link = "products/women/skirts",
                            Name = "Skirts",
                            Parent = (byte)3
                        },
                        new
                        {
                            HeadingItem_id = (byte)23,
                            HasChildren = false,
                            Item_Column = (byte)3,
                            Link = "products/women/swimwear",
                            Name = "Swimwear",
                            Parent = (byte)3
                        },
                        new
                        {
                            HeadingItem_id = (byte)24,
                            HasChildren = false,
                            Item_Column = (byte)3,
                            Link = "products/women/t-shirts",
                            Name = "T-Shirts",
                            Parent = (byte)3
                        });
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.Option", b =>
                {
                    b.Property<int>("Option_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<short>("Poll_id");

                    b.HasKey("Option_id");

                    b.HasIndex("Poll_id");

                    b.ToTable("Options");

                    b.HasData(
                        new
                        {
                            Option_id = 1,
                            Name = "Yes",
                            Poll_id = (short)1
                        },
                        new
                        {
                            Option_id = 2,
                            Name = "No",
                            Poll_id = (short)1
                        });
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.Order", b =>
                {
                    b.Property<int>("Order_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Time");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Order_id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.Ordered", b =>
                {
                    b.Property<long>("Ordered_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<int>("Order_Id");

                    b.Property<long>("ProductVariant_Id");

                    b.HasKey("Ordered_id");

                    b.HasIndex("Order_Id");

                    b.HasIndex("ProductVariant_Id");

                    b.ToTable("Ordereds");
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.Poll", b =>
                {
                    b.Property<short>("Poll_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Poll_id");

                    b.ToTable("Polls");

                    b.HasData(
                        new
                        {
                            Poll_id = (short)1,
                            Active = true,
                            Question = "Do you like this website?"
                        });
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.Price", b =>
                {
                    b.Property<long>("Price_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<double>("Discount");

                    b.Property<double>("Net_price");

                    b.Property<int>("Product_id");

                    b.HasKey("Price_id");

                    b.HasIndex("Product_id");

                    b.ToTable("Prices");

                    b.HasData(
                        new
                        {
                            Price_id = 1L,
                            Active = true,
                            Discount = 0.0,
                            Net_price = 10.0,
                            Product_id = 1
                        },
                        new
                        {
                            Price_id = 2L,
                            Active = true,
                            Discount = 10.0,
                            Net_price = 25.0,
                            Product_id = 2
                        },
                        new
                        {
                            Price_id = 3L,
                            Active = true,
                            Discount = 34.0,
                            Net_price = 49.0,
                            Product_id = 3
                        },
                        new
                        {
                            Price_id = 4L,
                            Active = true,
                            Discount = 14.0,
                            Net_price = 89.0,
                            Product_id = 4
                        },
                        new
                        {
                            Price_id = 5L,
                            Active = true,
                            Discount = 17.0,
                            Net_price = 100.0,
                            Product_id = 5
                        },
                        new
                        {
                            Price_id = 6L,
                            Active = true,
                            Discount = 43.0,
                            Net_price = 12.0,
                            Product_id = 6
                        },
                        new
                        {
                            Price_id = 7L,
                            Active = true,
                            Discount = 15.0,
                            Net_price = 44.0,
                            Product_id = 7
                        },
                        new
                        {
                            Price_id = 8L,
                            Active = true,
                            Discount = 30.0,
                            Net_price = 16.0,
                            Product_id = 8
                        },
                        new
                        {
                            Price_id = 9L,
                            Active = true,
                            Discount = 8.0,
                            Net_price = 27.0,
                            Product_id = 9
                        },
                        new
                        {
                            Price_id = 10L,
                            Active = true,
                            Discount = 6.0,
                            Net_price = 31.0,
                            Product_id = 10
                        },
                        new
                        {
                            Price_id = 11L,
                            Active = true,
                            Discount = 0.0,
                            Net_price = 10.0,
                            Product_id = 11
                        },
                        new
                        {
                            Price_id = 12L,
                            Active = true,
                            Discount = 11.0,
                            Net_price = 33.0,
                            Product_id = 12
                        },
                        new
                        {
                            Price_id = 13L,
                            Active = true,
                            Discount = 18.0,
                            Net_price = 80.0,
                            Product_id = 13
                        },
                        new
                        {
                            Price_id = 14L,
                            Active = true,
                            Discount = 0.0,
                            Net_price = 110.0,
                            Product_id = 14
                        },
                        new
                        {
                            Price_id = 15L,
                            Active = true,
                            Discount = 0.0,
                            Net_price = 24.0,
                            Product_id = 15
                        },
                        new
                        {
                            Price_id = 16L,
                            Active = true,
                            Discount = 0.0,
                            Net_price = 39.0,
                            Product_id = 16
                        });
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.Product", b =>
                {
                    b.Property<int>("Product_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Category_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(400);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<byte>("Subcategory_id");

                    b.Property<short?>("Type_id");

                    b.HasKey("Product_id");

                    b.HasIndex("Category_id");

                    b.HasIndex("Subcategory_id");

                    b.HasIndex("Type_id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Product_id = 1,
                            Category_id = (byte)1,
                            Description = "Belt with embossed metallic buckle",
                            Name = "Light brown leather belt",
                            Subcategory_id = (byte)1,
                            Type_id = (short)17
                        },
                        new
                        {
                            Product_id = 2,
                            Category_id = (byte)1,
                            Description = "Belt with sports buckle and metallic feature on the tip",
                            Name = "Dark brown leather belt",
                            Subcategory_id = (byte)1,
                            Type_id = (short)17
                        },
                        new
                        {
                            Product_id = 3,
                            Category_id = (byte)1,
                            Description = "Metal cuff bracelet",
                            Name = "Metal bracelet",
                            Subcategory_id = (byte)1,
                            Type_id = (short)3
                        },
                        new
                        {
                            Product_id = 4,
                            Category_id = (byte)1,
                            Description = "Textured weave blazer with a notched lapel collar and a contrasting pin detail in the buttonhole. Features two front flap pockets, one besom pocket at the chest with a pocket square detail, lining with double inside pockets, double back vents, buttoned cuffs and button fastening in the front.",
                            Name = "Birdseye suit blazer",
                            Subcategory_id = (byte)3,
                            Type_id = (short)20
                        },
                        new
                        {
                            Product_id = 5,
                            Category_id = (byte)1,
                            Description = "Cropped faded loose fit jeans with ripped detailing. They feature two side pockets, two back pockets, one coin pocket, belt loops, button fly fastening in the front and frayed hems",
                            Name = "Cropped loose fit jeans",
                            Subcategory_id = (byte)5,
                            Type_id = (short)23
                        },
                        new
                        {
                            Product_id = 6,
                            Category_id = (byte)1,
                            Description = "Espadrilles with a leather upper and a natural jute sole",
                            Name = "Leather and jute espadrilles",
                            Subcategory_id = (byte)7,
                            Type_id = (short)27
                        },
                        new
                        {
                            Product_id = 7,
                            Category_id = (byte)1,
                            Description = "White plimsolls. Seven-eyelet facing. Embossed detailing on the upper, except for the toe cap and the heel. White soles",
                            Name = "White embossed plimsolls",
                            Subcategory_id = (byte)7,
                            Type_id = (short)12
                        },
                        new
                        {
                            Product_id = 8,
                            Category_id = (byte)1,
                            Description = "Sleeveless printed T-shirt with a round neckline. Features a chest pocket",
                            Name = "Floral and swirl printed tank top",
                            Subcategory_id = (byte)9,
                            Type_id = (short)16
                        },
                        new
                        {
                            Product_id = 9,
                            Category_id = (byte)1,
                            Description = "Straight, printed T-shirt with a round neckline and short sleeves",
                            Name = "Texture striped t-shirt",
                            Subcategory_id = (byte)9,
                            Type_id = (short)30
                        },
                        new
                        {
                            Product_id = 10,
                            Category_id = (byte)2,
                            Description = "Multicoloured mini crossbody bag. Multicoloured sequin appliqués on the exterior. Lined interior with pocket",
                            Name = "Multicolored sequinned crossbody bag",
                            Subcategory_id = (byte)16,
                            Type_id = (short)4
                        },
                        new
                        {
                            Product_id = 11,
                            Category_id = (byte)2,
                            Description = "Semi-sheer, strappy bodysuit with a V-neckline and snap button fastening on the bottom",
                            Name = "Lace bodysuit",
                            Subcategory_id = (byte)17,
                            Type_id = (short)6
                        },
                        new
                        {
                            Product_id = 12,
                            Category_id = (byte)2,
                            Description = "Long red dress",
                            Name = "Long dress",
                            Subcategory_id = (byte)18,
                            Type_id = (short)8
                        },
                        new
                        {
                            Product_id = 13,
                            Category_id = (byte)2,
                            Description = "Long V-neck dress with short sleeves. Features a wide gathered waist, an asymmetric, frayed hem and button fastening in the front",
                            Name = "Linen dress with topstitching",
                            Subcategory_id = (byte)18,
                            Type_id = (short)8
                        },
                        new
                        {
                            Product_id = 14,
                            Category_id = (byte)2,
                            Description = "Double-breasted waistcoat with high inverted lapel collar. Box pleat detail on the hem in the same fabric. Features front flap pockets and button fastening",
                            Name = "Pleated waistcoat with inverted lapels",
                            Subcategory_id = (byte)18,
                            Type_id = (short)4
                        },
                        new
                        {
                            Product_id = 15,
                            Category_id = (byte)2,
                            Description = "Jumpsuit with an elastic neckline and short ruffled sleeves. Features a seam at the waist, a matching fabric belt, a ruffled hem and zip and button fastening in the front",
                            Name = "Floral print short jumpsuit",
                            Subcategory_id = (byte)19
                        },
                        new
                        {
                            Product_id = 16,
                            Category_id = (byte)2,
                            Description = "Fuchsia high-heel shoes. Kitten heels. Pointed toes",
                            Name = "Fabric high-heel court shoes",
                            Subcategory_id = (byte)7,
                            Type_id = (short)11
                        });
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.ProductPhoto", b =>
                {
                    b.Property<int>("Photo_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alt")
                        .IsRequired();

                    b.Property<int>("Product_id");

                    b.Property<string>("Source")
                        .IsRequired();

                    b.HasKey("Photo_id");

                    b.HasIndex("Product_id");

                    b.ToTable("ProductPhotos");

                    b.HasData(
                        new
                        {
                            Photo_id = 1,
                            Alt = "Belt",
                            Product_id = 1,
                            Source = "/images/MEN/Accessories/Belts/1_1.jpg"
                        },
                        new
                        {
                            Photo_id = 2,
                            Alt = "Belt",
                            Product_id = 1,
                            Source = "/images/MEN/Accessories/Belts/1_2.jpg"
                        },
                        new
                        {
                            Photo_id = 3,
                            Alt = "Belt",
                            Product_id = 2,
                            Source = "/images/MEN/Accessories/Belts/2_1.jpg"
                        },
                        new
                        {
                            Photo_id = 4,
                            Alt = "Belt",
                            Product_id = 2,
                            Source = "/images/MEN/Accessories/Belts/2_2.jpg"
                        },
                        new
                        {
                            Photo_id = 5,
                            Alt = "Bracelet",
                            Product_id = 3,
                            Source = "/images/MEN/Accessories/Jewellery/2_1.jpg"
                        },
                        new
                        {
                            Photo_id = 6,
                            Alt = "Bracelet",
                            Product_id = 3,
                            Source = "/images/MEN/Accessories/Jewellery/2_2.jpg"
                        },
                        new
                        {
                            Photo_id = 7,
                            Alt = "Vest",
                            Product_id = 4,
                            Source = "/images/MEN/Blazers/Vests/1_1.jpg"
                        },
                        new
                        {
                            Photo_id = 8,
                            Alt = "Vest",
                            Product_id = 4,
                            Source = "/images/MEN/Blazers/Vests/1_2.jpg"
                        },
                        new
                        {
                            Photo_id = 9,
                            Alt = "Vest",
                            Product_id = 4,
                            Source = "/images/MEN/Blazers/Vests/1_3.jpg"
                        },
                        new
                        {
                            Photo_id = 10,
                            Alt = "Jeans",
                            Product_id = 5,
                            Source = "/images/MEN/Jeans/Regular_fit/1_1.jpg"
                        },
                        new
                        {
                            Photo_id = 11,
                            Alt = "Jeans",
                            Product_id = 5,
                            Source = "/images/MEN/Jeans/Regular_fit/1_2.jpg"
                        },
                        new
                        {
                            Photo_id = 12,
                            Alt = "Jeans",
                            Product_id = 5,
                            Source = "/images/MEN/Jeans/Regular_fit/1_3.jpg"
                        },
                        new
                        {
                            Photo_id = 13,
                            Alt = "Shoes",
                            Product_id = 6,
                            Source = "/images/MEN/Shoes/Moccasins/2_1.jpg"
                        },
                        new
                        {
                            Photo_id = 14,
                            Alt = "Shoes",
                            Product_id = 6,
                            Source = "/images/MEN/Shoes/Moccasins/2_2.jpg"
                        },
                        new
                        {
                            Photo_id = 15,
                            Alt = "Shoes",
                            Product_id = 6,
                            Source = "/images/MEN/Shoes/Moccasins/2_3.jpg"
                        },
                        new
                        {
                            Photo_id = 16,
                            Alt = "Sneakers",
                            Product_id = 7,
                            Source = "/images/MEN/Shoes/Sneakers/1_1.jpg"
                        },
                        new
                        {
                            Photo_id = 17,
                            Alt = "Sneakers",
                            Product_id = 7,
                            Source = "/images/MEN/Shoes/Sneakers/1_2.jpg"
                        },
                        new
                        {
                            Photo_id = 18,
                            Alt = "Sneakers",
                            Product_id = 7,
                            Source = "/images/MEN/Shoes/Sneakers/1_3.jpg"
                        },
                        new
                        {
                            Photo_id = 19,
                            Alt = "T-Shirt",
                            Product_id = 8,
                            Source = "/images/MEN/TShirts/Sleeveless/2_1.jpg"
                        },
                        new
                        {
                            Photo_id = 20,
                            Alt = "T-Shirt",
                            Product_id = 8,
                            Source = "/images/MEN/TShirts/Sleeveless/2_2.jpg"
                        },
                        new
                        {
                            Photo_id = 21,
                            Alt = "T-Shirt",
                            Product_id = 8,
                            Source = "/images/MEN/TShirts/Sleeveless/2_3.jpg"
                        },
                        new
                        {
                            Photo_id = 22,
                            Alt = "T-Shirt",
                            Product_id = 9,
                            Source = "/images/MEN/TShirts/Striped/1_1.jpg"
                        },
                        new
                        {
                            Photo_id = 23,
                            Alt = "T-Shirt",
                            Product_id = 9,
                            Source = "/images/MEN/TShirts/Striped/1_2.jpg"
                        },
                        new
                        {
                            Photo_id = 24,
                            Alt = "T-Shirt",
                            Product_id = 9,
                            Source = "/images/MEN/TShirts/Striped/1_3.jpg"
                        },
                        new
                        {
                            Photo_id = 25,
                            Alt = "Bag",
                            Product_id = 10,
                            Source = "/images/WOMEN/Bags/Mini_bags/1_1.jpg"
                        },
                        new
                        {
                            Photo_id = 26,
                            Alt = "Bag",
                            Product_id = 10,
                            Source = "/images/WOMEN/Bags/Mini_bags/1_2.jpg"
                        },
                        new
                        {
                            Photo_id = 27,
                            Alt = "Bag",
                            Product_id = 10,
                            Source = "/images/WOMEN/Bags/Mini_bags/1_3.jpg"
                        },
                        new
                        {
                            Photo_id = 28,
                            Alt = "Body",
                            Product_id = 11,
                            Source = "/images/WOMEN/Body/Lace/2_1.jpg"
                        },
                        new
                        {
                            Photo_id = 29,
                            Alt = "Body",
                            Product_id = 11,
                            Source = "/images/WOMEN/Body/Lace/2_2.jpg"
                        },
                        new
                        {
                            Photo_id = 30,
                            Alt = "Body",
                            Product_id = 11,
                            Source = "/images/WOMEN/Body/Lace/2_3.jpg"
                        },
                        new
                        {
                            Photo_id = 31,
                            Alt = "Dress",
                            Product_id = 12,
                            Source = "/images/WOMEN/Dresses/Maxi/1_1.jpg"
                        },
                        new
                        {
                            Photo_id = 32,
                            Alt = "Dress",
                            Product_id = 12,
                            Source = "/images/WOMEN/Dresses/Maxi/1_2.jpg"
                        },
                        new
                        {
                            Photo_id = 33,
                            Alt = "Dress",
                            Product_id = 12,
                            Source = "/images/WOMEN/Dresses/Maxi/1_3.jpg"
                        },
                        new
                        {
                            Photo_id = 34,
                            Alt = "Dress",
                            Product_id = 13,
                            Source = "/images/WOMEN/Dresses/Maxi/3_1.jpg"
                        },
                        new
                        {
                            Photo_id = 35,
                            Alt = "Dress",
                            Product_id = 13,
                            Source = "/images/WOMEN/Dresses/Maxi/3_2.jpg"
                        },
                        new
                        {
                            Photo_id = 36,
                            Alt = "Dress",
                            Product_id = 13,
                            Source = "/images/WOMEN/Dresses/Maxi/3_3.jpg"
                        },
                        new
                        {
                            Photo_id = 37,
                            Alt = "Dress",
                            Product_id = 14,
                            Source = "/images/WOMEN/Dresses/Mini/3_1.jpg"
                        },
                        new
                        {
                            Photo_id = 38,
                            Alt = "Dress",
                            Product_id = 14,
                            Source = "/images/WOMEN/Dresses/Mini/3_2.jpg"
                        },
                        new
                        {
                            Photo_id = 39,
                            Alt = "Dress",
                            Product_id = 14,
                            Source = "/images/WOMEN/Dresses/Mini/3_3.jpg"
                        },
                        new
                        {
                            Photo_id = 40,
                            Alt = "Jumpsuit",
                            Product_id = 15,
                            Source = "/images/WOMEN/Jumpsuits/2_1.jpg"
                        },
                        new
                        {
                            Photo_id = 41,
                            Alt = "Jumpsuit",
                            Product_id = 15,
                            Source = "/images/WOMEN/Jumpsuits/2_2.jpg"
                        },
                        new
                        {
                            Photo_id = 42,
                            Alt = "Jumpsuit",
                            Product_id = 15,
                            Source = "/images/WOMEN/Jumpsuits/2_3.jpg"
                        },
                        new
                        {
                            Photo_id = 43,
                            Alt = "Shoes",
                            Product_id = 16,
                            Source = "/images/WOMEN/Shoes/High_heels/2_1.jpg"
                        },
                        new
                        {
                            Photo_id = 44,
                            Alt = "Shoes",
                            Product_id = 16,
                            Source = "/images/WOMEN/Shoes/High_heels/2_2.jpg"
                        },
                        new
                        {
                            Photo_id = 45,
                            Alt = "Shoes",
                            Product_id = 16,
                            Source = "/images/WOMEN/Shoes/High_heels/2_3.jpg"
                        });
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.ProductVariant", b =>
                {
                    b.Property<long>("ProductVariant_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("Color_id");

                    b.Property<int>("Product_id");

                    b.Property<int>("Quantity");

                    b.Property<byte?>("Size_id");

                    b.HasKey("ProductVariant_Id");

                    b.HasIndex("Color_id");

                    b.HasIndex("Product_id");

                    b.HasIndex("Size_id");

                    b.ToTable("ProductVariants");

                    b.HasData(
                        new
                        {
                            ProductVariant_Id = 1L,
                            Color_id = (byte)2,
                            Product_id = 1,
                            Quantity = 12
                        },
                        new
                        {
                            ProductVariant_Id = 2L,
                            Color_id = (byte)2,
                            Product_id = 2,
                            Quantity = 20
                        },
                        new
                        {
                            ProductVariant_Id = 3L,
                            Product_id = 3,
                            Quantity = 15
                        },
                        new
                        {
                            ProductVariant_Id = 4L,
                            Color_id = (byte)2,
                            Product_id = 4,
                            Quantity = 15,
                            Size_id = (byte)1
                        },
                        new
                        {
                            ProductVariant_Id = 5L,
                            Color_id = (byte)1,
                            Product_id = 4,
                            Quantity = 15,
                            Size_id = (byte)1
                        },
                        new
                        {
                            ProductVariant_Id = 6L,
                            Color_id = (byte)4,
                            Product_id = 4,
                            Quantity = 15,
                            Size_id = (byte)4
                        },
                        new
                        {
                            ProductVariant_Id = 7L,
                            Color_id = (byte)3,
                            Product_id = 4,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 8L,
                            Color_id = (byte)5,
                            Product_id = 4,
                            Quantity = 15,
                            Size_id = (byte)5
                        },
                        new
                        {
                            ProductVariant_Id = 9L,
                            Color_id = (byte)5,
                            Product_id = 4,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 10L,
                            Color_id = (byte)4,
                            Product_id = 5,
                            Quantity = 15,
                            Size_id = (byte)4
                        },
                        new
                        {
                            ProductVariant_Id = 11L,
                            Color_id = (byte)3,
                            Product_id = 5,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 12L,
                            Color_id = (byte)5,
                            Product_id = 5,
                            Quantity = 15,
                            Size_id = (byte)5
                        },
                        new
                        {
                            ProductVariant_Id = 13L,
                            Color_id = (byte)5,
                            Product_id = 5,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 14L,
                            Color_id = (byte)4,
                            Product_id = 6,
                            Quantity = 15,
                            Size_id = (byte)4
                        },
                        new
                        {
                            ProductVariant_Id = 15L,
                            Color_id = (byte)3,
                            Product_id = 6,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 16L,
                            Color_id = (byte)5,
                            Product_id = 6,
                            Quantity = 15,
                            Size_id = (byte)5
                        },
                        new
                        {
                            ProductVariant_Id = 17L,
                            Color_id = (byte)5,
                            Product_id = 6,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 18L,
                            Color_id = (byte)4,
                            Product_id = 7,
                            Quantity = 15,
                            Size_id = (byte)4
                        },
                        new
                        {
                            ProductVariant_Id = 19L,
                            Color_id = (byte)3,
                            Product_id = 7,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 20L,
                            Color_id = (byte)5,
                            Product_id = 7,
                            Quantity = 15,
                            Size_id = (byte)5
                        },
                        new
                        {
                            ProductVariant_Id = 21L,
                            Color_id = (byte)5,
                            Product_id = 7,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 22L,
                            Color_id = (byte)4,
                            Product_id = 8,
                            Quantity = 15,
                            Size_id = (byte)4
                        },
                        new
                        {
                            ProductVariant_Id = 23L,
                            Color_id = (byte)3,
                            Product_id = 8,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 24L,
                            Color_id = (byte)5,
                            Product_id = 8,
                            Quantity = 15,
                            Size_id = (byte)5
                        },
                        new
                        {
                            ProductVariant_Id = 25L,
                            Color_id = (byte)5,
                            Product_id = 8,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 26L,
                            Color_id = (byte)2,
                            Product_id = 8,
                            Quantity = 15,
                            Size_id = (byte)1
                        },
                        new
                        {
                            ProductVariant_Id = 27L,
                            Color_id = (byte)1,
                            Product_id = 8,
                            Quantity = 15,
                            Size_id = (byte)1
                        },
                        new
                        {
                            ProductVariant_Id = 28L,
                            Color_id = (byte)4,
                            Product_id = 9,
                            Quantity = 15,
                            Size_id = (byte)4
                        },
                        new
                        {
                            ProductVariant_Id = 29L,
                            Color_id = (byte)3,
                            Product_id = 9,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 30L,
                            Color_id = (byte)5,
                            Product_id = 9,
                            Quantity = 15,
                            Size_id = (byte)5
                        },
                        new
                        {
                            ProductVariant_Id = 31L,
                            Color_id = (byte)5,
                            Product_id = 9,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 32L,
                            Color_id = (byte)2,
                            Product_id = 10,
                            Quantity = 15,
                            Size_id = (byte)1
                        },
                        new
                        {
                            ProductVariant_Id = 33L,
                            Color_id = (byte)1,
                            Product_id = 10,
                            Quantity = 15,
                            Size_id = (byte)1
                        },
                        new
                        {
                            ProductVariant_Id = 34L,
                            Color_id = (byte)4,
                            Product_id = 10,
                            Quantity = 15,
                            Size_id = (byte)4
                        },
                        new
                        {
                            ProductVariant_Id = 35L,
                            Color_id = (byte)3,
                            Product_id = 10,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 36L,
                            Color_id = (byte)5,
                            Product_id = 10,
                            Quantity = 15,
                            Size_id = (byte)5
                        },
                        new
                        {
                            ProductVariant_Id = 37L,
                            Color_id = (byte)5,
                            Product_id = 10,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 38L,
                            Color_id = (byte)2,
                            Product_id = 11,
                            Quantity = 15,
                            Size_id = (byte)1
                        },
                        new
                        {
                            ProductVariant_Id = 39L,
                            Color_id = (byte)1,
                            Product_id = 11,
                            Quantity = 15,
                            Size_id = (byte)1
                        },
                        new
                        {
                            ProductVariant_Id = 40L,
                            Color_id = (byte)4,
                            Product_id = 11,
                            Quantity = 15,
                            Size_id = (byte)4
                        },
                        new
                        {
                            ProductVariant_Id = 41L,
                            Color_id = (byte)3,
                            Product_id = 11,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 42L,
                            Color_id = (byte)5,
                            Product_id = 11,
                            Quantity = 15,
                            Size_id = (byte)5
                        },
                        new
                        {
                            ProductVariant_Id = 43L,
                            Color_id = (byte)5,
                            Product_id = 11,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 44L,
                            Color_id = (byte)2,
                            Product_id = 12,
                            Quantity = 15,
                            Size_id = (byte)1
                        },
                        new
                        {
                            ProductVariant_Id = 45L,
                            Color_id = (byte)1,
                            Product_id = 12,
                            Quantity = 15,
                            Size_id = (byte)1
                        },
                        new
                        {
                            ProductVariant_Id = 46L,
                            Color_id = (byte)4,
                            Product_id = 12,
                            Quantity = 15,
                            Size_id = (byte)4
                        },
                        new
                        {
                            ProductVariant_Id = 47L,
                            Color_id = (byte)3,
                            Product_id = 12,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 48L,
                            Color_id = (byte)5,
                            Product_id = 12,
                            Quantity = 15,
                            Size_id = (byte)5
                        },
                        new
                        {
                            ProductVariant_Id = 49L,
                            Color_id = (byte)5,
                            Product_id = 12,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 50L,
                            Color_id = (byte)2,
                            Product_id = 13,
                            Quantity = 15,
                            Size_id = (byte)1
                        },
                        new
                        {
                            ProductVariant_Id = 51L,
                            Color_id = (byte)1,
                            Product_id = 13,
                            Quantity = 15,
                            Size_id = (byte)1
                        },
                        new
                        {
                            ProductVariant_Id = 52L,
                            Color_id = (byte)4,
                            Product_id = 13,
                            Quantity = 15,
                            Size_id = (byte)4
                        },
                        new
                        {
                            ProductVariant_Id = 53L,
                            Color_id = (byte)3,
                            Product_id = 13,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 54L,
                            Color_id = (byte)5,
                            Product_id = 13,
                            Quantity = 15,
                            Size_id = (byte)5
                        },
                        new
                        {
                            ProductVariant_Id = 55L,
                            Color_id = (byte)5,
                            Product_id = 13,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 56L,
                            Color_id = (byte)2,
                            Product_id = 14,
                            Quantity = 15,
                            Size_id = (byte)1
                        },
                        new
                        {
                            ProductVariant_Id = 57L,
                            Color_id = (byte)1,
                            Product_id = 14,
                            Quantity = 15,
                            Size_id = (byte)1
                        },
                        new
                        {
                            ProductVariant_Id = 58L,
                            Color_id = (byte)4,
                            Product_id = 14,
                            Quantity = 15,
                            Size_id = (byte)4
                        },
                        new
                        {
                            ProductVariant_Id = 59L,
                            Color_id = (byte)3,
                            Product_id = 14,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 60L,
                            Color_id = (byte)5,
                            Product_id = 14,
                            Quantity = 15,
                            Size_id = (byte)5
                        },
                        new
                        {
                            ProductVariant_Id = 61L,
                            Color_id = (byte)5,
                            Product_id = 15,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 62L,
                            Color_id = (byte)2,
                            Product_id = 15,
                            Quantity = 15,
                            Size_id = (byte)1
                        },
                        new
                        {
                            ProductVariant_Id = 63L,
                            Color_id = (byte)1,
                            Product_id = 15,
                            Quantity = 15,
                            Size_id = (byte)1
                        },
                        new
                        {
                            ProductVariant_Id = 64L,
                            Color_id = (byte)4,
                            Product_id = 15,
                            Quantity = 15,
                            Size_id = (byte)4
                        },
                        new
                        {
                            ProductVariant_Id = 65L,
                            Color_id = (byte)3,
                            Product_id = 15,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 66L,
                            Color_id = (byte)5,
                            Product_id = 15,
                            Quantity = 15,
                            Size_id = (byte)5
                        },
                        new
                        {
                            ProductVariant_Id = 67L,
                            Color_id = (byte)5,
                            Product_id = 15,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 68L,
                            Color_id = (byte)2,
                            Product_id = 16,
                            Quantity = 15,
                            Size_id = (byte)1
                        },
                        new
                        {
                            ProductVariant_Id = 69L,
                            Color_id = (byte)1,
                            Product_id = 16,
                            Quantity = 15,
                            Size_id = (byte)1
                        },
                        new
                        {
                            ProductVariant_Id = 70L,
                            Color_id = (byte)4,
                            Product_id = 16,
                            Quantity = 15,
                            Size_id = (byte)4
                        },
                        new
                        {
                            ProductVariant_Id = 71L,
                            Color_id = (byte)3,
                            Product_id = 16,
                            Quantity = 15,
                            Size_id = (byte)3
                        },
                        new
                        {
                            ProductVariant_Id = 72L,
                            Color_id = (byte)5,
                            Product_id = 16,
                            Quantity = 15,
                            Size_id = (byte)5
                        },
                        new
                        {
                            ProductVariant_Id = 73L,
                            Color_id = (byte)5,
                            Product_id = 16,
                            Quantity = 15,
                            Size_id = (byte)3
                        });
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.Rating", b =>
                {
                    b.Property<int>("Rating_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Product_id");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.Property<int>("Value");

                    b.HasKey("Rating_id");

                    b.HasIndex("Product_id");

                    b.HasIndex("UserId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.Size", b =>
                {
                    b.Property<byte>("Size_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("Size_id");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Size_id = (byte)1,
                            Name = "XS"
                        },
                        new
                        {
                            Size_id = (byte)2,
                            Name = "S"
                        },
                        new
                        {
                            Size_id = (byte)3,
                            Name = "M"
                        },
                        new
                        {
                            Size_id = (byte)4,
                            Name = "XL"
                        },
                        new
                        {
                            Size_id = (byte)5,
                            Name = "L"
                        },
                        new
                        {
                            Size_id = (byte)6,
                            Name = "XXL"
                        });
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.Slider", b =>
                {
                    b.Property<int>("Slider_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(55);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(35);

                    b.HasKey("Slider_id");

                    b.ToTable("Sliders");

                    b.HasData(
                        new
                        {
                            Slider_id = 1,
                            Active = true,
                            Text = "Browse our new collection",
                            Title = "Summer collection"
                        });
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.SliderPhoto", b =>
                {
                    b.Property<int>("Photo_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alt")
                        .IsRequired();

                    b.Property<int>("Slider_id");

                    b.Property<string>("Source")
                        .IsRequired();

                    b.HasKey("Photo_id");

                    b.HasIndex("Slider_id");

                    b.ToTable("SliderPhotos");

                    b.HasData(
                        new
                        {
                            Photo_id = 1,
                            Alt = "Man cover",
                            Slider_id = 1,
                            Source = "/images/mancover.jpg"
                        },
                        new
                        {
                            Photo_id = 2,
                            Alt = "Woman cover",
                            Slider_id = 1,
                            Source = "/images/womancover.jpg"
                        });
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.Subcategory", b =>
                {
                    b.Property<byte>("Subcategory_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Subcategory_id");

                    b.ToTable("Subcategories");

                    b.HasData(
                        new
                        {
                            Subcategory_id = (byte)1,
                            Name = "Accessories"
                        },
                        new
                        {
                            Subcategory_id = (byte)2,
                            Name = "Backpacks"
                        },
                        new
                        {
                            Subcategory_id = (byte)3,
                            Name = "Blazers"
                        },
                        new
                        {
                            Subcategory_id = (byte)4,
                            Name = "Jackets"
                        },
                        new
                        {
                            Subcategory_id = (byte)5,
                            Name = "Jeans"
                        },
                        new
                        {
                            Subcategory_id = (byte)6,
                            Name = "Shirts"
                        },
                        new
                        {
                            Subcategory_id = (byte)7,
                            Name = "Shoes"
                        },
                        new
                        {
                            Subcategory_id = (byte)8,
                            Name = "Trousers"
                        },
                        new
                        {
                            Subcategory_id = (byte)9,
                            Name = "T-Shirts"
                        },
                        new
                        {
                            Subcategory_id = (byte)10,
                            Name = "Underwear"
                        },
                        new
                        {
                            Subcategory_id = (byte)16,
                            Name = "Bags"
                        },
                        new
                        {
                            Subcategory_id = (byte)17,
                            Name = "Body"
                        },
                        new
                        {
                            Subcategory_id = (byte)18,
                            Name = "Dresses"
                        },
                        new
                        {
                            Subcategory_id = (byte)19,
                            Name = "Jumpsuits"
                        },
                        new
                        {
                            Subcategory_id = (byte)20,
                            Name = "Skirts"
                        },
                        new
                        {
                            Subcategory_id = (byte)21,
                            Name = "Swimwear"
                        });
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.Type", b =>
                {
                    b.Property<short>("Type_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(55);

                    b.HasKey("Type_id");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            Type_id = (short)1,
                            Name = "Eyewear"
                        },
                        new
                        {
                            Type_id = (short)2,
                            Name = "Hats"
                        },
                        new
                        {
                            Type_id = (short)3,
                            Name = "Jewellery"
                        },
                        new
                        {
                            Type_id = (short)4,
                            Name = "Mini"
                        },
                        new
                        {
                            Type_id = (short)5,
                            Name = "Large"
                        },
                        new
                        {
                            Type_id = (short)6,
                            Name = "Lace"
                        },
                        new
                        {
                            Type_id = (short)7,
                            Name = "Plain"
                        },
                        new
                        {
                            Type_id = (short)8,
                            Name = "Maxi"
                        },
                        new
                        {
                            Type_id = (short)9,
                            Name = "Midi"
                        },
                        new
                        {
                            Type_id = (short)10,
                            Name = "Flats"
                        },
                        new
                        {
                            Type_id = (short)11,
                            Name = "High-heels"
                        },
                        new
                        {
                            Type_id = (short)12,
                            Name = "Sneakers"
                        },
                        new
                        {
                            Type_id = (short)13,
                            Name = "Summer shoes"
                        },
                        new
                        {
                            Type_id = (short)14,
                            Name = "Basic"
                        },
                        new
                        {
                            Type_id = (short)16,
                            Name = "Sleeveless"
                        },
                        new
                        {
                            Type_id = (short)17,
                            Name = "Belts"
                        },
                        new
                        {
                            Type_id = (short)18,
                            Name = "Sunglasses"
                        },
                        new
                        {
                            Type_id = (short)19,
                            Name = "Checked"
                        },
                        new
                        {
                            Type_id = (short)20,
                            Name = "Vests"
                        },
                        new
                        {
                            Type_id = (short)21,
                            Name = "Bomber"
                        },
                        new
                        {
                            Type_id = (short)22,
                            Name = "Denim"
                        },
                        new
                        {
                            Type_id = (short)23,
                            Name = "Regular fit"
                        },
                        new
                        {
                            Type_id = (short)24,
                            Name = "Leather"
                        },
                        new
                        {
                            Type_id = (short)25,
                            Name = "Slim fit"
                        },
                        new
                        {
                            Type_id = (short)26,
                            Name = "Casual"
                        },
                        new
                        {
                            Type_id = (short)27,
                            Name = "Moccasins"
                        },
                        new
                        {
                            Type_id = (short)28,
                            Name = "Chinos"
                        },
                        new
                        {
                            Type_id = (short)29,
                            Name = "Tailored"
                        },
                        new
                        {
                            Type_id = (short)30,
                            Name = "Striped"
                        },
                        new
                        {
                            Type_id = (short)31,
                            Name = "Printed"
                        });
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<short?>("CSC");

                    b.Property<string>("CardNumber");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Country")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("HomeAddress")
                        .HasMaxLength(70);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.Property<int?>("ZipCode");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.Vote", b =>
                {
                    b.Property<long>("Vote_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Option_id");

                    b.Property<DateTime>("Time");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Vote_id");

                    b.HasIndex("Option_id");

                    b.HasIndex("UserId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.Option", b =>
                {
                    b.HasOne("E_Commerce_Web_App.Models.Poll", "Poll")
                        .WithMany("Options")
                        .HasForeignKey("Poll_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.Order", b =>
                {
                    b.HasOne("E_Commerce_Web_App.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.Ordered", b =>
                {
                    b.HasOne("E_Commerce_Web_App.Models.Order", "Order")
                        .WithMany("Ordered")
                        .HasForeignKey("Order_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("E_Commerce_Web_App.Models.ProductVariant", "ProductVariant")
                        .WithMany()
                        .HasForeignKey("ProductVariant_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.Price", b =>
                {
                    b.HasOne("E_Commerce_Web_App.Models.Product", "Product")
                        .WithMany("Prices")
                        .HasForeignKey("Product_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.Product", b =>
                {
                    b.HasOne("E_Commerce_Web_App.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("Category_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("E_Commerce_Web_App.Models.Subcategory", "Subcategory")
                        .WithMany()
                        .HasForeignKey("Subcategory_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("E_Commerce_Web_App.Models.Type", "Type")
                        .WithMany()
                        .HasForeignKey("Type_id");
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.ProductPhoto", b =>
                {
                    b.HasOne("E_Commerce_Web_App.Models.Product", "Product")
                        .WithMany("ProductPhotos")
                        .HasForeignKey("Product_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.ProductVariant", b =>
                {
                    b.HasOne("E_Commerce_Web_App.Models.Color", "Color")
                        .WithMany("ProductVariants")
                        .HasForeignKey("Color_id");

                    b.HasOne("E_Commerce_Web_App.Models.Product", "Product")
                        .WithMany("ProductVariants")
                        .HasForeignKey("Product_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("E_Commerce_Web_App.Models.Size", "Size")
                        .WithMany("ProductVariants")
                        .HasForeignKey("Size_id");
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.Rating", b =>
                {
                    b.HasOne("E_Commerce_Web_App.Models.Product", "Product")
                        .WithMany("Ratings")
                        .HasForeignKey("Product_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("E_Commerce_Web_App.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.SliderPhoto", b =>
                {
                    b.HasOne("E_Commerce_Web_App.Models.Slider", "Slider")
                        .WithMany("SliderPhotos")
                        .HasForeignKey("Slider_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("E_Commerce_Web_App.Models.Vote", b =>
                {
                    b.HasOne("E_Commerce_Web_App.Models.Option", "Option")
                        .WithMany("Votes")
                        .HasForeignKey("Option_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("E_Commerce_Web_App.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("E_Commerce_Web_App.Models.Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("E_Commerce_Web_App.Models.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("E_Commerce_Web_App.Models.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("E_Commerce_Web_App.Models.Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("E_Commerce_Web_App.Models.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("E_Commerce_Web_App.Models.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
